{"ast":null,"code":"var _jsxFileName = \"/home/david/Documentos/GitHub/Desafio-Bridge-Full-Stack/client/src/App.js\";\nimport React, { Component } from 'react';\nimport bridge_logo from './bridge_logo.png';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      divisors: '',\n      numberValue: '',\n      validInput: false\n    };\n\n    this.handleInputNumberChange = e => {\n      let numberValue = e.target.value;\n      let validInput = !isNaN(numberValue);\n      this.setState({\n        numberValue,\n        validInput\n      });\n    };\n\n    this.handleSubmitButtonClick = () => {\n      this.submitNumber().then(res => this.setState({\n        divisors: res.express\n      })).catch(err => console.log(err));\n    };\n\n    this.getSubmitButton = () => {\n      console.log(this.state.validInput);\n\n      if (this.state.validInput) {\n        return React.createElement(Button, {\n          variant: \"contained\",\n          color: \"secondary\",\n          onClick: this.handleSubmitButtonClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, \"Calcular\");\n      } else {\n        return React.createElement(Button, {\n          variant: \"contained\",\n          disabled: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"Calcular\");\n      }\n    };\n\n    this.submitNumber = async () => {\n      const response = await fetch('/api/divisors');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bridge_logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Desafio Dev. Full Stack\")), React.createElement(\"div\", {\n      className: \"App-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Calcule j\\xE1 os divisores de um n\\xFAmero:\"), React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Insira um n\\xFAmero inteiro\",\n      onChange: this.handleInputNumberChange,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"newLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), this.getSubmitButton(), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, this.state.divisors)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/david/Documentos/GitHub/Desafio-Bridge-Full-Stack/client/src/App.js"],"names":["React","Component","bridge_logo","Button","TextField","App","state","divisors","numberValue","validInput","handleInputNumberChange","e","target","value","isNaN","setState","handleSubmitButtonClick","submitNumber","then","res","express","catch","err","console","log","getSubmitButton","response","fetch","body","json","status","Error","message","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport bridge_logo from './bridge_logo.png';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    divisors: '',\n    numberValue: '',\n    validInput: false\n  };\n\n  // componentDidUpdate(prevState, prevProps) {\n  //   console.log(this.state.validInput)\n  // }\n\n  handleInputNumberChange = (e) => { \n    let numberValue = e.target.value\n    let validInput = !isNaN(numberValue)\n\n    this.setState({ numberValue, validInput }) \n  }\n\n  handleSubmitButtonClick = () => {\n    this.submitNumber()\n    .then(res => this.setState({ divisors: res.express }))\n    .catch(err => console.log(err));\n  }\n\n  getSubmitButton = () => {\n    console.log(this.state.validInput)\n    if (this.state.validInput) {\n      return <Button variant=\"contained\" color=\"secondary\" onClick={ this.handleSubmitButtonClick }>Calcular</Button>\n    } else {\n      return <Button variant=\"contained\" disabled>Calcular</Button>\n    }\n  }\n\n  submitNumber = async () => {\n    const response = await fetch('/api/divisors')\n    const body = await response.json()\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n\n    return body\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={bridge_logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Desafio Dev. Full Stack</h1>\n        </header>\n        <div className=\"App-body\">\n          <p className=\"App-intro\">Calcule já os divisores de um número:</p>\n          <TextField id=\"standard-basic\" label=\"Insira um número inteiro\" onChange={ this.handleInputNumberChange } value={this.state.value} />\n          <p className=\"newLine\"/>\n          { this.getSubmitButton() }\n          <p className=\"App-intro\">{this.state.divisors}</p>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}