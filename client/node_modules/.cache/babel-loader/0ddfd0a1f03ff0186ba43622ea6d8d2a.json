{"ast":null,"code":"var _jsxFileName = \"/home/david/Documentos/GitHub/Desafio-Bridge-Full-Stack/client/src/App.js\";\nimport React, { Component } from 'react';\nimport bridge_logo from './bridge_logo.png';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      numberValue: '',\n      validInput: false\n    };\n\n    this.handleInputNumberChange = e => {\n      let input_value = parseInt(e.target.value);\n\n      if (input_value && isNaN(input_value)) {\n        this.setState({\n          validInput: true\n        });\n        this.setState({\n          numberValue: e.target.value\n        });\n      } else {\n        this.setState({\n          validInput: false\n        });\n      }\n    };\n\n    this.submitNumber = async () => {\n      const response = await fetch('/api/divisors');\n      const body = await response.json();\n\n      if (response.status !== 200) {\n        throw Error(body.message);\n      }\n\n      return body;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: bridge_logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      className: \"App-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Desafio Dev. Full Stack\")), React.createElement(\"div\", {\n      className: \"App-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Calcule j\\xE1 os divisores de um n\\xFAmero:\"), React.createElement(TextField, {\n      className: \"numberInput\",\n      id: \"standard-basic\",\n      label: \"Insira um n\\xFAmero inteiro\",\n      value: this.state.numberValue,\n      onChange: this.handleInputNumberChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      className: \"newLine\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Button, {\n      className: \"ButtonCalculate\",\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: this.validateInput,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Calcular\"), React.createElement(\"p\", {\n      className: \"App-intro\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, this.state.response)));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/david/Documentos/GitHub/Desafio-Bridge-Full-Stack/client/src/App.js"],"names":["React","Component","bridge_logo","Button","TextField","App","state","response","numberValue","validInput","handleInputNumberChange","e","input_value","parseInt","target","value","isNaN","setState","submitNumber","fetch","body","json","status","Error","message","render","validateInput"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,WAAW,EAAE,EAFP;AAGNC,MAAAA,UAAU,EAAE;AAHN,KADkB;;AAAA,SAa1BC,uBAb0B,GAaCC,CAAD,IAAO;AAC/B,UAAIC,WAAW,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAA1B;;AAEA,UAAIH,WAAW,IAAII,KAAK,CAACJ,WAAD,CAAxB,EAAuC;AACrC,aAAKK,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAd,SAAd;AACA,aAAKQ,QAAL,CAAc;AAAET,UAAAA,WAAW,EAAEG,CAAC,CAACG,MAAF,CAASC;AAAxB,SAAd;AACD,OAHD,MAGO;AACL,aAAKE,QAAL,CAAc;AAAER,UAAAA,UAAU,EAAE;AAAd,SAAd;AACD;AACF,KAtByB;;AAAA,SAwB1BS,YAxB0B,GAwBX,YAAY;AACzB,YAAMX,QAAQ,GAAG,MAAMY,KAAK,CAAC,eAAD,CAA5B;AACA,YAAMC,IAAI,GAAG,MAAMb,QAAQ,CAACc,IAAT,EAAnB;;AAEA,UAAId,QAAQ,CAACe,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,cAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AAED,aAAOJ,IAAP;AACD,KAjCyB;AAAA;;AAmC1BK,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAEvB,WAAV;AAAuB,MAAA,SAAS,EAAC,UAAjC;AAA4C,MAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAFF,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDADF,EAEE,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAC,aAArB;AAAmC,MAAA,EAAE,EAAC,gBAAtC;AAAuD,MAAA,KAAK,EAAC,6BAA7D;AAAwF,MAAA,KAAK,EAAG,KAAKI,KAAL,CAAWE,WAA3G;AAAyH,MAAA,QAAQ,EAAG,KAAKE,uBAAzI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAEuK;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFvK,EAGE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAC,WAA5C;AAAwD,MAAA,KAAK,EAAC,WAA9D;AAA0E,MAAA,OAAO,EAAG,KAAKgB,aAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,EAKE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0B,KAAKpB,KAAL,CAAWC,QAArC,CALF,CALF,CADF;AAeD;;AAnDyB;;AAsD5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react';\nimport bridge_logo from './bridge_logo.png';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    numberValue: '',\n    validInput: false\n  };\n\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n\n  handleInputNumberChange = (e) => { \n    let input_value = parseInt(e.target.value)\n\n    if (input_value && isNaN(input_value)) {\n      this.setState({ validInput: true })\n      this.setState({ numberValue: e.target.value }) \n    } else {\n      this.setState({ validInput: false })\n    }\n  }\n\n  submitNumber = async () => {\n    const response = await fetch('/api/divisors')\n    const body = await response.json()\n\n    if (response.status !== 200) {\n      throw Error(body.message)\n    }\n\n    return body\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={bridge_logo} className=\"App-logo\" alt=\"logo\" />\n          <h1 className=\"App-title\">Desafio Dev. Full Stack</h1>\n        </header>\n        <div className=\"App-body\">\n          <p className=\"App-intro\">Calcule já os divisores de um número:</p>\n          <TextField className=\"numberInput\" id=\"standard-basic\" label=\"Insira um número inteiro\" value={ this.state.numberValue } onChange={ this.handleInputNumberChange } /><p className=\"newLine\"/>\n          <Button className=\"ButtonCalculate\" variant=\"contained\" color=\"secondary\" onClick={ this.validateInput }>Calcular</Button>\n\n          <p className=\"App-intro\">{this.state.response}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}